============================================
Chapter 5 - symfony と OpenPNE3 における MVC
============================================

コントローラ
============

symfony は MVC パターンにおけるコントローラを、いくつかの部品によって実現しています。

このセクションではそれぞれの部品について説明していきます。

フロントコントローラ
--------------------

アクション
----------

モジュール生成
++++++++++++++

次のようなコマンドによって、モジュールとアクションのひな形を生成することができます::

  $ ./symfony generate:module pc_frontend example

プラグインの場合は以下のようにします::

  $ ./symfony opGenerate:module opExamplePlugin pc_frontend example

これで example モジュールのアクションのひな形が、 ``pc_frontend`` アプリケーションのなかに作られたことになります。

アクションクラス
++++++++++++++++

生成されたアクションファイルはモジュールの ``actions/`` ディレクトリに作られます。ファイル名は ``actions.class.php`` です。

ファイルは ``{module-name}Actions`` と命名されたクラスを含んでいます。このアクションクラスはアクションに関連付いた数々のメソッドを有します。最初は、 ``index`` アクションを定義する ``executeIndex()`` メソッドが存在します::

  class exampleActions extends sfActions
  {
    public function executeIndex()
    {
    }
  }

.. caution::

  もし会員制のアクションを作りたい場合はセキュリティの設定を忘れないようにしてください。

  初期設定ではすべての人が生まれたてのアクションにアクセスできます。


他のアプリケーションとのコードの共有
++++++++++++++++++++++++++++++++++++

OpenPNE は多くのアプリケーションを有しています : pc_frontend, pc_backend, mobile_frontend, api, mobile_mail_frontend ……あなたはコードの重複を減らすために他のアプリケーションとアクションクラスを共有したいと考えるかもしれません。それはあなたが思っている以上に簡単です。 symfony は厳格に OOP のルールに従って作られています（OpenPNE もそうです）。そのため、アクションクラスは単純なクラスです。これは他アプリケーションとコードを共有するためにはベースとなる抽象クラスを作るだけであるということを意味します。

認証
----

アクションのセキュリティ
++++++++++++++++++++++++

前述の通り、アクションはデフォルトでは見知らぬユーザから保護されません。

アクセス制御をするためには設定ファイルを作らなければなりませんが、しかしご安心ください、それはとても簡単なことです。

あなたは ``config`` ディレクトリを新規作成し、 ``security.yml`` ファイルを作り、 以下の例のようないくつかの設定を書くだけです。

  all:
    is_secure: on
    credentials: SNSMember

そしておそらく、新しい設定を有効にするためにキャッシュを削除する必要があるでしょう::

  $ ./symfony cache:clear

これで終わりです！　アクションが正しく保護されているかチェックしてみてください。

ビュー
======

テンプレート
------------

symfony はテンプレートエンジンを供給しません。 symfony におけるテンプレートとは純粋な PHP スクリプトでしかありません。

これは驚くに値しません。テンプレートエンジンのように PHP スクリプトは HTML に埋め込まれることができます。またテンプレートはあらゆる PHP の関数を使用できます。

テンプレートは apps/pc_frontend/modules/example/templates ディレクトリに存在します。

アクションからの変数
++++++++++++++++++++

テンプレートはアクションで定義されたいくつかの変数を使用することができます。

ヘルパー
++++++++

パーツの仕組み
++++++++++++++

「パーツ」は和製英語です。「部品」「構成要素」といった意味になります。

OpenPNE はページの構成要素のいくつかの型を持っています。パーツとパーツを組み合わせることでページを作成することができます。

OpenPNE はパーツを使うために有用なヘルパーを用意しています。

以下の画像のようなシンプルなボックスを使用したいと思いますか？

[image]

これはとても簡単です。以下のようなコードを書くだけです::

 <?php op_include_box('example', 'Thie is an information.', array('title' => 'Information',)); ?>

第一引数はパーツを特定するための ID、第二引数はパーツの本文、第三引数はオプションです。

もっと長くて複雑なテキストを本文として使いたいですか？　ではスロットを利用してください::

  <?php slot('body'); ?>
  <p>Hi, <?php echo $yourName ?></p>
  <p>This is an information for you!!</p>
  <p>If you want to get more information, please visit <?php echo link_to('Detail Page', '@detail') ?>.</p>
  <?php end_slot(); ?>
  <?php op_include_box('example', get_slot('body'), array('title' => 'Information')); ?>


