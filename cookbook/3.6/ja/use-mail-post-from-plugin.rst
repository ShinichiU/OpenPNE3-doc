==============================
プラグインのメール投稿対応方法
==============================

OpenPNE 3 のメール投稿
======================

対応方法の前に、メール投稿がどのようにおこなわれるかを解説します。

メール投稿は openpne:execute-mail-action タスクにメールの内容を標準入力で渡すことで実現されます。

openpne:execute-mail-action では、メールヘッダ内の To に応じて、 mobile_mail_frontend アプリケーションのアクションを実行しています。アクションが出力をおこなう場合は、その出力を From に指定されているメールアドレスに対して返信します。

つまり、 mobile_mail_frontend アプリケーションにアクションを追加するだけでメール投稿に対応することができます。

対応方法
========

アクションの記述
----------------

まずは、通常通り mobile_mail_frontend アプリケーションの任意のモジュールにアクションクラスを追加してください。

次に、これも通常通りにアクションクラス内にアクション用メソッドを記述することになるのですが、メソッドの第一引数には sfOpenPNEWebRequest や sfWebRequest ではなく opMailRequest が渡されることに注意してください（特にタイプヒンティングを常用している場合）。

その後、リクエストパラメータなどによって自由にアクションを記述してください。

後述しますが、 opMailRequest はメールの本文などの情報を持っているので、これも活用できます。

なお、先述の通り出力の内容は From に向けてメール送信されます。

メールを送信したくない場合はアクションの返り値を sfView::NONE として、一切の出力をおこなわないようにしてください。

opMailRequest 経由で取得できる情報
++++++++++++++++++++++++++++++++++

opMailRequest では、 opMailRequest::getMailMessage() で opMailMessage のインスタンスを取得できます。

これを経由して、以下の情報が取得可能です。

* メール本文: opMailMessage::getContent() によって取得可能
* 添付画像： opMailMessage::getImages() によって取得可能
* メールヘッダの内容： opMailMessage::getHeader() によって取得可能

ルーティングルールの設定
------------------------

メール投稿用のアクションに重要なのはルーティングルールの設定です。

pc_frontend や mobile_frontend などの他のアプリケーションと違い、 mobile_mail_frontend アプリケーションはルーティングがマッチしなかった場合にアクションを実行するためのルーティングルールが用意されていません。

そのため、記述したアクションを実行させるためのルーティングルールを必ず記述する必要があります。

ここでは、 URL は To のメールアドレスのローカル部（@以前）に対応します。

たとえば e@example.com で example モジュールの example アクションを実行したい場合は以下のように記述します::

 mail_example_example:
   url: e
   class: opMailRoute
   param: { module: example, action: example }

opMailRoute では . を区切り文字にしてパラメータを利用することもできます。
